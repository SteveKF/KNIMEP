package org.knime.bnl;

import java.util.Arrays;
import java.util.LinkedList;
import java.util.List;
import org.knime.core.data.DataCell;
import org.knime.core.data.DataRow;
import org.knime.core.node.InvalidSettingsException;
import org.knime.core.node.ModelContentRO;
import org.knime.core.node.ModelContentWO;

public class BNLStructure{

	// options to save all row ids, skyline ids or the selected columns
	// (dimensions)
	public enum SaveOption {
		ALL, SKYLINE
	};

	private List<DataCell> row;
	
	private SaveOption option;

	private static final String CFG_KEY_ALL = "allRowIds";
	private static final String CFG_KEY_SKY = "skyRowIds";

	public BNLStructure(DataRow row, SaveOption option) {
		
		assert(option == SaveOption.ALL || option == SaveOption.SKYLINE);
		
		this.row = new LinkedList<DataCell>();
		for(int i=0; i < row.getNumCells(); i++){
			this.row.add(row.getCell(i));
		}
		this.option = option;
	}

	public BNLStructure(SaveOption option) {
		
		assert(option == SaveOption.ALL || option == SaveOption.SKYLINE);
		
		this.option = option;
		row = new LinkedList<>();
	}
	
	public List<DataRow> getRow(){
		return row;
	}

	// ************* loading and saving of internal representation ***********

	public void saveTo(final ModelContentWO modelContent) {

		DataCell[] cellArray = new DataCell[row.size()];
		
		switch (option) {

		case ALL:
			row.toArray(cellArray);
			modelContent.addDataCellArray(CFG_KEY_ALL,cellArray);
			break;
		case SKYLINE:
			row.toArray(cellArray);
			modelContent.addDataCellArray(CFG_KEY_SKY, cellArray);
			break;
		default:
			System.err.println("No SaveOption was chosen");
		}
	}


	public void loadFrom(final ModelContentRO modelContent) throws InvalidSettingsException {

		switch (option) {

		case ALL:
			DataCell[] all_cellArray = modelContent.getDataCellArray(CFG_KEY_ALL);
			row.addAll(Arrays.asList(all_cellArray));
			break;
		case SKYLINE:
			DataCell[] sky_cellArray = modelContent.getDataCellArray(CFG_KEY_SKY);
			row.addAll(Arrays.asList(sky_cellArray));
			break;
		default:
			System.err.println("No SaveOption was chosen");
		}
	}
}
